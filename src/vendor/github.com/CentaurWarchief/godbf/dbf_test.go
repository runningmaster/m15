package godbf_test

import (
	"bytes"
	"testing"

	"github.com/CentaurWarchief/godbf"
	"github.com/stretchr/testify/assert"
)

func TestReadInvalidHeader(t *testing.T) {
	reader, err := godbf.NewReader(bytes.NewReader([]byte{0x03}), &godbf.UTF8Decoder{})

	assert.Nil(t, reader)
	assert.Equal(t, godbf.ErrInvalidHeader, err)
}

func TestReadUnsupportedVersion(t *testing.T) {
	reader := bytes.NewReader([]byte{
		0x30,
		0x6F, 0x07, 0x1A,
		0x0D, 0x21, 0x00,
		0x00, 0x81, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00,
	})

	_, err := godbf.NewReader(reader, &godbf.UTF8Decoder{})

	assert.Equal(t, godbf.ErrUnsupportedVersion, err)
}

func TestModifiedDate(t *testing.T) {
	reader := bytes.NewReader([]byte{
		0x03,
		0x73, 0x0B, 0x0B,
		0x01, 0x00, 0x00, 0x00, 0x21, 0x00, 0x01,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x0D, 0x20, 0x1A,
	})

	dbf, err := godbf.NewReader(reader, &godbf.UTF8Decoder{})

	assert.Nil(t, err)
	assert.NotNil(t, dbf)
	assert.Equal(t, "2015-11-11", dbf.Modified().Format("2006-01-02"))
}
